% 运动想象基本参数设置
subject_name = 'Jyt_test_0606_online';  % 被试姓名
sub_offline_collection_folder = 'Jyt_test_0606_offline_20240606_193249561_data';  % 被试的离线采集数据
subject_name_offline =  'Jyt_test_0606_offline';  % 离线收集数据时候的被试名称
% session 大于1时候要改动的部分
foldername_Sessions = 'Jyt_test_0606_online_20240606_201926565_data';  % 当session大于1的时候，需要手工修正foldername_Sessions
session_idx = 10;  % session index数量，如果是1的话，会自动生成相关排布

% 定义起始和结束的trial数量
startTrial = 12; % 替换n为起始trial的数字
endTrial = 36; % 替换m为结束trial的数字

% 初始化存储预测值和标签的单元数组
allPredictions = cell(3,1);
allLabels = cell(3,1);

% 遍历三个类别
for category = 0:2
    % 遍历指定范围内的trial
    for trial = startTrial:endTrial
        % 构建文件名模式
        filePattern = sprintf('Online_EEG_data2Server_Jyt_test_0606_online_class_%d_session_*_trial_%d_window_6EI_mu.mat', category, trial);
        
        % 获取文件夹中匹配的文件列表
        fileList = dir(fullfile(foldername_Sessions ,'Online_Engagements_Jyt_test_0606_online', filePattern));
        
        % 遍历找到的文件
        for fileIdx = 1:length(fileList)
            % 加载文件中的resultsMI变量
            data = load(fullfile(fileList(fileIdx).folder, fileList(fileIdx).name), 'resultsMI');
            
            % 提取预测值和标签
            predictions = data.resultsMI(1, :);
            labels = data.resultsMI(3, :);
            
            % 存储结果
            allPredictions{category+1} = [allPredictions{category+1}, predictions];
            allLabels{category+1} = [allLabels{category+1}, labels];
        end
    end
end

% 初始化精度和F1分数数组
accuracy = zeros(3,1);
F1score = zeros(3,1);

% 计算每个类别的精度和F1分数
for category = 1:3
    % 提取当前类别的预测值和标签
    predictions = allPredictions{category};
    labels = allLabels{category};
    
    % 计算混淆矩阵
    [C,~] = confusionmat(labels, predictions);
    
    % 计算精度
    accuracy(category) = sum(diag(C)) / sum(C(:));
    
    % 计算每个类别的F1分数
    F1 = zeros(1,3); % 初始化类别的F1分数
    for class = 1:size(C,1)
        precision = C(class,class) / sum(C(:,class));
        recall = C(class,class) / sum(C(class,:));
        F1(class) = 2 * precision * recall / (precision + recall);
    end
    
    % 计算平均F1分数
    F1score(category) = mean(F1(~isnan(F1)));
end

% 显示结果
fprintf('Trial: %d 到 %d \n', startTrial, endTrial);
for category = 1:3
    fprintf('类别 %d 的精度: %.2f\n', category-1, accuracy(category));
    fprintf('类别 %d 的平均F1分数: %.2f\n', category-1, F1score(category));
end
